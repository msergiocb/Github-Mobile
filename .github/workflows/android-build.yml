name: Android CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test Android App
    runs-on: ubuntu-latest
    environment: Mobile_dev

    env:
      JAVA_VERSION: 17
      ANDROID_API_LEVEL: 34
      ANDROID_BUILD_TOOLS: 34.0.0
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: ðŸ“² Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 11076708
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true
          packages:
            platform-tools
            build-tools;34.0.0
            platforms;android-34
            extras;google;m2repository
            extras;android;m2repository

      - name: Validate grafle properties
        run: |
          test -f gradle.properties || (echo "gradle.properties no encontrado" && exit 1)
          grep -q "android.useAndroidX=true" gradle.properties || (echo "android.useAndroidX=true faltante" && exit 1)
          grep -q "kotlin.code.style=official" gradle.properties || (echo "kotlin.code.style=official faltante" && exit 1)
          echo "gradle.properties verificado"

      - name: Grant Gradle execute permissions
        run: chmod +x ./gradlew

      - name: Download project dependencies
        run: ./gradlew dependencies

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: app/build/reports/tests/testDebugUnitTest/index.html

      - name: Build APK (Debug)
        run: ./gradlew assembleDebug

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_2 }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-app-debug
          path: app/build/outputs/apk/debug/*.apk
